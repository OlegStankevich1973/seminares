Console.Clear();
//  Программа подсчета суммы элементов массива находящихся на нечетных позициях
//Задаем глобальную переменную для накопления результата
int sumOddElements = 0;
//Метод возвращает массив заполненый случайными числами от 0 до 100
int[] FillingArray()
{
    // создаем навый массив на 12 элементов
    int[] outArray = new int[12];
    // в массиве создаем итератор
    int i = 0;
    // создаем синтезатор для заполнения массива случайными числами
    System.Random numberSintezator = new System.Random();
    while (i < 12)
    {
        // заполняем массив случайными числами щт 0 до 99
        outArray[i] = numberSintezator.Next(0, 10);
        i++;
    }
    return outArray;
}

//Метод подсчета суммы элементов находящихся на нечетных позициях
// берем созданный ранее и заполненный массив
void ColculateTask(int[] outArray)
{
    int i = 1;
    while (i < 12)
    {
        // цикл продолжается пока не пройдет всю длину массива
        if (i <= outArray.Length)
        {
            // суммирует все элементы от 1 до окончания массива на нечетных позициях массива
            sumOddElements += outArray[i];
        }
        // перебираем все нечетные позиции массива
        i = i + 2;
    }
}

//Выводим результат на кансоль
void PrintResult()
{
    Console.WriteLine(sumOddElements);

}

//Метод печатает массив
void PrintIntArray(int[] outArray)
{
    //Буфферная переменная
    int i = 0;
    // выводим первую скобку до действия цикла печати
    Console.Write("[");
    //Пробегаем все элементы массива без последнего чтобы не было (,)
    while (i < outArray.Length - 1)
    {
        //Выводим элемент массива
        Console.Write(outArray[i] + ", ");
        //Увеличиваем инкремент
        i++;
    }
    //Выводим последний элемент массива и последнюю скобку тк после цикла находится
    Console.WriteLine(outArray[i] + "]");
}

// решение задачи 36
// создаем массив из 12 чисел от 0 до 10
int[] bufferArray = FillingArray();
// печатаем созданный массив
PrintIntArray(bufferArray);
// считаем сумму элементов
ColculateTask(bufferArray);
// выводим на экран сумму элементов
PrintResult();





